syntax = "proto3";

package securefs;

import "protos/argopt.proto";

message EncryptedData
{
    bytes iv = 1;
    bytes mac = 2;
    bytes ciphertext = 3;
}

message MasterKeys
{
    bytes tree_key = 1;
    bytes file_key = 2;
    bytes padding_key = 3;
}

message Argon2idParams
{
    uint32 time_cost = 1 [
        (arg_option) = {
            doc : "Defines the amount of computation realized and therefore the execution time, given in number of iterations."
            alt_name : "t"
            min_value : 1
        }
    ];
    uint32 memory_cost = 2 [
        (arg_option) = {
            doc : "Defines the memory usage, given in MiB."
            alt_name : "m"
            min_value : 1
        }
    ];
    uint32 parallelism = 3 [
        (arg_option) = {
            doc : "Defines the number of parallel threads (changes the resulting hash value)."
            alt_name : "p"
            min_value : 1
        }
    ];
}

message SecureFSParams
{
    int32 format_version = 1;
    bool exact_name_only = 2 [
        (arg_option) = {
            doc : "If set, the filesystem will not support case insensitive and Unicode normalized name lookup. This can save some storage, if you only use Linux/BSD."
            alt_name : "exact"
        }
    ];
    uint64 underlying_block_size = 3 [
        (arg_option) = {
            doc : "The block size for the virtual filesystem plus the overhead (28 bytes). Usually it should be a power of 2."
            alt_name : "block"
            min_value : 32
        }
    ];
    uint64 virtual_block_size_for_tree_db = 4 [
        (arg_option) = {
            doc : "The block size for the SQLite database (tree.db). Usually it should be a power of 2."
            alt_name : "tree-block"
            min_value : 32
        }
    ];
}

message SecureFSSerializedConfig
{
    SecureFSParams params = 1;
    EncryptedData encrypted_master_keys = 2;
    bytes salt = 3;
    oneof pbkdf
    {
        Argon2idParams argon2_params = 4;
    }
}
